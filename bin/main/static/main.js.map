{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n@import url('https://fonts.googleapis.com/css?family=Raleway');\\n/*Google fonts*/\\nbody{\\n padding: 0;\\n margin: 0;\\n}\\nform{\\n max-width: 30em;\\n margin: 4em auto;\\n position: relative;\\n background: #f4f4f4;\\n padding: 2em 3em;\\n}\\nform h1{\\n    font-family: \\\"Raleway\\\";\\n    color:#F97300; \\n}\\nform input[type=text]::-webkit-input-placeholder{\\n   font-family: \\\"Raleway\\\";\\n   color:#666; \\n}\\nform input[type=text]::-ms-input-placeholder{\\n   font-family: \\\"Raleway\\\";\\n   color:#666; \\n}\\nform input[type=text]::placeholder{\\n   font-family: \\\"Raleway\\\";\\n   color:#666; \\n}\\nform .data{\\n    margin-top: 1em;\\n}\\nform .data li{\\n background: #fff;\\n border-left: 4px solid #F97300;\\n padding: 1em;\\n margin: 1em auto;\\n color: #666;\\n font-family: \\\"Raleway\\\";\\n}\\nform .data li i{\\n    float: right;\\n    color: #888;\\n    cursor: pointer;\\n}\\nform .input-group-text{\\n    background: #F97300;\\n    border-radius: 50%;\\n    width: 5em;\\n    height: 5em;\\n    padding: 1em 23px;\\n    color: #fff;\\n    position: absolute;\\n    right: 13px;\\n    top: 68px;\\n    cursor: pointer;\\n}\\nform .input-group-text i{\\n    font-size: 2em;\\n}\\nform .form-control{\\n height: 3em;\\n    font-family: \\\"Raleway\\\";\\n}\\nform .form-control:focus{\\n box-shadow: 0;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n <form #todoForm= \\\"ngForm\\\" (ngSubmit)=\\\"todoSubmit(todoForm.value);todoForm.resetForm()\\\">\\n  <div class=\\\"form-group\\\">\\n  <h1 class=\\\"text-center text-primary\\\">Todo App</h1>\\n   <div class=\\\"input-group-prepend\\\">\\n       <input type=\\\"text\\\" #todo class=\\\"form-control\\\" placeholder=\\\"Add Todo\\\" name=\\\"todo\\\" [(ngModel)]=\\\"textVal\\\" autocomplete=\\\"off\\\" autofocus=\\\"true\\\">\\n    <span class=\\\"input-group-text\\\" (click)=\\\"todoSubmit(todoForm.value);todoForm.resetForm()\\\"><i class=\\\"material-icons\\\">add</i></span>\\n   </div>\\n   <div class=\\\"data\\\">\\n  <ul class=\\\"list-instyled\\\">\\n   <li *ngFor=\\\"let todo of todoArray\\\">{{todo.listValue}} \\n   <i (click)=\\\"updateItem(todo)\\\" class=\\\"material-icons\\\">edit</i>\\n   <i (click)=\\\"deleteItem(todo.Id)\\\" class=\\\"material-icons\\\">delete</i>\\n   </li>\\n  </ul>\\n  </div>\\n  </div>\\n </form>\\n</div>\\n<button (click)=\\\"loginbtn();\\\">Hi</button>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'app works!';\n  result = '';\n  todoArray;\n  textVal;\n  finalResult='';\n  constructor(private http: HttpClient){\n  }\n\n  private sendtoDB(value): void {\n  \tvar input = value.todo;\n  \tconsole.log(input);\n  \tthis.http.post(`/api/saveToDos`,input).subscribe(response => {console.log('database result saved',response);this.getTodos();});\n  \tthis.getTodos();\n  }\n  \n  deleteItem(todo){\n   console.log(todo);\n   this.http.post(`/api/deleteToDos`,todo).subscribe(response => {console.log('item removed from database',response);this.getTodos();});\n   \n   /*for(let i=0 ;i<= this.todoArray.length ;i++){\n    if(todo== this.todoArray[i]){\n     this.todoArray.splice(i,1)\n    }\n   }*/\n  }\n  \n  @ViewChild(\"todo\") nameField: ElementRef;\n  updateItem(todo){\n  \tthis.deleteItem(todo.Id);\n  \tthis.textVal = todo.listValue;\n  \tthis.nameField.nativeElement.focus();\n  }\n  \n  todoSubmit(value:any){\n     if(value!==\"\"){\n    /*this.todoArray.push(value.todo)*/\n     this.sendtoDB(value);\n    }else{\n      alert('Field required **')\n    }\n    \n  }\n\tgetTodos(){\n\t\tthis.http.get(`/api/getAll`).subscribe(response => this.todoArray = response);\n\t\tconsole.log('gettodos called');\n\t}\n\tngOnInit(){\n\t\tconsole.log(\"on page init\");\n\t\tthis.getTodos();\n\t}\n\t\n\tloginbtn(){\n\t\tthis.http.get(`/api/login`).subscribe(response => this.todoArray = response);\n\t}\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}